package com.adyen.examples.recurring.Soap;

import java.io.IOException;
import java.io.PrintWriter;
import java.net.URL;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.ws.BindingProvider;

import com.adyen.services.recurring.DisableRequest;
import com.adyen.services.recurring.DisableResult;
import com.adyen.services.recurring.RecurringPortType;
import com.adyen.services.recurring.RecurringService;
import com.adyen.services.recurring.ServiceException;

/**
 * Disable recurring contract (SOAP)
 * 
 * Disabling a recurring contract (detail) can be done by calling the disable action on the Recurring service with a
 * request. This file shows how you can disable a recurring contract using SOAP.
 * 
 * Please note: using our API requires a web service user. Set up your Webservice user:
 * Adyen CA >> Settings >> Users >> ws@Company. >> Generate Password >> Submit
 * 
 * @link /5.Recurring/Soap/DisableRecurringContract
 * @author Created by Adyen - Payments Made Easy
 */

@WebServlet(urlPatterns = { "/5.Recurring/Soap/DisableRecurringContract" })
public class DisableRecurringContract extends HttpServlet {

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		/**
		 * SOAP settings
		 * - wsdl: the WSDL url you are using (Test/Live)
		 * - wsUser: your web service user
		 * - wsPassword: your web service user's password
		 */
		String wsdl = "https://pal-test.adyen.com/pal/Recurring.wsdl";
		String wsUser = "YourWSUser";
		String wsPassword = "YourWSPassword";

		/**
		 * Create SOAP client, using classes in adyen-wsdl-cxf.jar library (generated by wsdl2java tool, Apache CXF).
		 * 
		 * @see WebContent/WEB-INF/lib/adyen-wsdl-cxf.jar
		 */
		RecurringService service = new RecurringService(new URL(wsdl));
		RecurringPortType client = service.getRecurringHttpPort();

		// Set HTTP Authentication
		((BindingProvider) client).getRequestContext().put(BindingProvider.USERNAME_PROPERTY, wsUser);
		((BindingProvider) client).getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, wsPassword);

		/**
		 * The disable recurring contract request should contain the following variables:
		 * 
		 * <pre>
		 * - merchantAccount    : Your merchant account.
		 * - shopperReference   : The reference to the shopper. This shopperReference must be the same as the
		 *                        shopperReference used in the initial payment.
		 * - recurring
		 *     - contract       : The recurringDetailReference of the details you wish to disable. If you do not supply
		 *                        this field all details for the shopper will be disabled including the contract!
		 *                        This means that you can not add new details anymore.
		 * </pre>
		 */
		DisableRequest recurringRequest = new DisableRequest();
		recurringRequest.setMerchantAccount("YourMerchantAccount");
		recurringRequest.setShopperReference("TheShopperReference");
		recurringRequest.setRecurringDetailReference("TheDetailReferenceOfTheContract");

		/**
		 * Send the disable recurring contract request.
		 */
		DisableResult recurringResult;
		try {
			recurringResult = client.disable(recurringRequest);
		} catch (ServiceException e) {
			throw new ServletException(e);
		}

		/**
		 * The response will be a result object with a single field response. If a single detail was disabled the value
		 * of this field will be [detail-successfully-disabled] or, if all details are disabled, the value is
		 * [all-details-successfully-disabled].
		 */
		PrintWriter out = response.getWriter();

		out.println("Disable Recurring Result:");
		out.println("- response: " + recurringResult.getResponse());
	}

}
